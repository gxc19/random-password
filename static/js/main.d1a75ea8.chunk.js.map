{"version":3,"sources":["components/Slider.js","components/Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Slider","props","className","counter","type","min","max","value","onChange","changeHandler","Buttons","btnOff","btnOff2","btnOff3","btnOff4","this","upperBtn","lowerBtn","numBtn","symBtn","onClick","ch","ch2","ch3","ch4","Component","App","state","upper","lower","number","symbol","password","addHandler","setState","prevState","minusHandler","start","characterOpt","pass","splice","indexOf","length","i","currentOpt","Math","floor","random","randomOpt","push","console","log","charaHandler","charaHandler2","charaHandler3","charaHandler4","e","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d1a75ea8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../style/Slider.css\";\n\nconst Slider = (props) => {\n  return (\n    <div className=\"button-container\">\n      <p className=\"counter\">Length: {props.counter}</p>\n      <div className=\"slider-container\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"16\"\n          value={props.counter}\n          className=\"slider\"\n          onChange={props.changeHandler}\n          // style={{\n          //   background: \n          //   `linear-gradient(90deg,#2EAC68 0%, #2EAC68 ${props.counter}%, #182B3C ${props.counter}%, #182B3C 100%)`\n          // }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React from \"react\";\nimport { Component } from \"react\";\nimport \"../style/Buttons.css\";\n\nclass Buttons extends Component {\n  render() {\n    let btnOff = \"btnTop\";\n    let btnOff2 = \"btnTop2\";\n    let btnOff3 = \"btnTop3\";\n    let btnOff4 = \"btnTop4\";\n\n    if (!this.props.upperBtn) {\n      btnOff = \"btnTop off\";\n    }\n    if (!this.props.lowerBtn) {\n      btnOff2 = \"btnTop2 off\";\n    }\n    if (!this.props.numBtn) {\n      btnOff3 = \"btnTop3 off\";\n    }\n    if (!this.props.symBtn) {\n      btnOff4 = \"btnTop4 off\";\n    }\n    return (\n      <div className=\"btnBox\">\n        <div className=\"optBtn\">\n          <h2>Upper Case</h2>\n          <div className=\"btn\" onClick={this.props.ch}>\n            <div className={this.props.upperBtn ? \"none\" : \"btn-base\"} />\n            <div className={btnOff} />\n          </div>\n        </div>\n        <div className=\"optBtn\">\n          <h2>Lower Case</h2>\n          <div className=\"btn\" onClick={this.props.ch2}>\n            <div className={this.props.lowerBtn ? \"none\" : \"btn-base\"} />\n            <div className={btnOff2} />\n          </div>\n        </div>\n        <div className=\"optBtn\">\n          <h2>Numbers</h2>\n          <div className=\"btn\" onClick={this.props.ch3}>\n            <div className={this.props.numBtn ? \"none\" : \"btn-base\"} />\n            <div className={btnOff3} />\n          </div>\n        </div>\n        <div className=\"optBtn\">\n          <h2>Symbols</h2>\n          <div className=\"btn\" onClick={this.props.ch4}>\n            <div className={this.props.symBtn ? \"none\" : \"btn-base\"} />\n            <div className={btnOff4} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Slider from \"./components/Slider\";\nimport Buttons from \"./components/Buttons\";\n\nclass App extends Component {\n  state = {\n    upper: [\n      \"A\",\n      \"B\",\n      \"C\",\n      \"D\",\n      \"E\",\n      \"F\",\n      \"G\",\n      \"H\",\n      \"I\",\n      \"J\",\n      \"K\",\n      \"L\",\n      \"M\",\n      \"N\",\n      \"O\",\n      \"P\",\n      \"Q\",\n      \"R\",\n      \"S\",\n      \"T\",\n      \"U\",\n      \"V\",\n      \"W\",\n      \"X\",\n      \"Y\",\n      \"Z\",\n    ],\n    lower: [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ],\n    number: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    symbol: [\"!\", \"@\", \"Â£\", \"$\", \"%\", \"^\", \"&\", \"*\", \"<\", \">\"],\n    password: [],\n    counter: 5,\n    upperBtn: true,\n    lowerBtn: true,\n    numBtn: true,\n    symBtn: true,\n  };\n\n  // Adds to the counter, but prevents you from going above 16\n  addHandler = () => {\n    if (this.state.counter === 16) {\n      this.setState({ counter: 16 });\n    } else {\n      this.setState((prevState) => ({ counter: prevState.counter + 1 }));\n    }\n  };\n\n  // Decreases the counter, but prevents you from going below 0\n  minusHandler = () => {\n    if (this.state.counter === 1) {\n      this.setState({ counter: 1 });\n    } else {\n      this.setState((prevState) => ({ counter: prevState.counter - 1 }));\n    }\n  };\n\n  // Adds the 4 options into an array, which then randomly get picked. Once picked, a random character will be selected and pushed into the password array\n  start = () => {\n    let counter = this.state.counter;\n    let upper = [...this.state.upper];\n    let lower = [...this.state.lower];\n    let number = [...this.state.number];\n    let symbol = [...this.state.symbol];\n\n    let characterOpt = [upper, lower, number, symbol];\n    let pass = [];\n\n    if (!this.state.upperBtn) {\n      characterOpt.splice(characterOpt.indexOf(upper), 1);\n    }\n\n    if (!this.state.lowerBtn) {\n      characterOpt.splice(characterOpt.indexOf(lower), 1);\n    }\n\n    if (!this.state.numBtn) {\n      characterOpt.splice(characterOpt.indexOf(number), 1);\n    }\n\n    if (!this.state.symBtn) {\n      characterOpt.splice(characterOpt.indexOf(symbol), 1);\n    }\n\n    if (characterOpt.length === 0) {\n      return;\n    }\n\n    for (let i = 0; i < counter; i++) {\n      let currentOpt =\n        characterOpt[Math.floor(Math.random() * characterOpt.length)];\n      let randomOpt = currentOpt[Math.floor(Math.random() * currentOpt.length)];\n      pass.push(randomOpt);\n      this.setState({ password: pass });\n    }\n    console.log(characterOpt);\n  };\n\n  charaHandler = () => {\n    this.setState((prevState) => {\n      return { upperBtn: !prevState.upperBtn };\n    });\n    console.log(this.state.upperBtn);\n  };\n\n  charaHandler2 = () => {\n    this.setState((prevState) => {\n      return { lowerBtn: !prevState.lowerBtn };\n    });\n    console.log(this.state.lowerBtn);\n  };\n\n  charaHandler3 = () => {\n    this.setState((prevState) => {\n      return { numBtn: !prevState.numBtn };\n    });\n    console.log(this.state.numBtn);\n  };\n\n  charaHandler4 = () => {\n    this.setState((prevState) => {\n      return { symBtn: !prevState.symBtn };\n    });\n    console.log(this.state.symBtn);\n  };\n\n  changeHandler = (e) => {\n    this.setState({ counter: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"miniContainer\">\n          <h1>Random Password Generator</h1>\n          <div className=\"display\">\n            <h1>{this.state.password}</h1>\n          </div>\n\n          <Slider\n            counter={this.state.counter}\n            addHandler={this.addHandler}\n            minusHandler={this.minusHandler}\n            changeHandler={this.changeHandler}\n          />\n\n          <Buttons\n            ch={this.charaHandler}\n            ch2={this.charaHandler2}\n            ch3={this.charaHandler3}\n            ch4={this.charaHandler4}\n            upperBtn={this.state.upperBtn}\n            lowerBtn={this.state.lowerBtn}\n            numBtn={this.state.numBtn}\n            symBtn={this.state.symBtn}\n          />\n\n          <div className=\"start\" onClick={this.start}>\n            <p>Generate Password</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}